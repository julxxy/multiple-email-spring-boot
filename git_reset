#!/usr/bin/env bash
# 交互式清理，每个分支都会确认

set -e

echo "=== 清理所有分支的提交记录（保留代码） ==="
echo ""

# 获取所有分支
branches=($(git branch | sed 's/^\*\?[ \t]*//' | grep -v '^$'))

echo "发现以下分支："
for i in "${!branches[@]}"; do
  echo "$((i+1)). ${branches[i]}"
done

echo ""
read -p "确认要清理这些分支的历史记录吗？(y/N): " confirm
if [[ $confirm != "y" && $confirm != "Y" ]]; then
  echo "操作已取消"
  exit 0
fi

echo ""
echo "开始处理..."

for branch in "${branches[@]}"; do
  echo ""
  echo ">>> 处理分支: $branch"

  # 显示当前分支的提交数量
  commit_count=$(git rev-list --count "$branch" 2>/dev/null || echo "0")
  echo "当前提交数: $commit_count"

  # 切换到分支
  git checkout "$branch"

  # 显示文件数量
  file_count=$(find . -type f -not -path './.git/*' | wc -l)
  echo "当前文件数: $file_count"

  # 创建孤立分支
  git checkout --orphan "temp-clean-$branch"

  # 添加所有文件
  git add -A

  # 提交
  git commit -m "Clean history for branch: $branch ($(date '+%Y-%m-%d %H:%M:%S'))"

  # 替换原分支
  git branch -D "$branch"
  git branch -m "$branch"

  echo "✅ $branch 完成 (1个提交, $file_count个文件)"
done

echo ""
echo "🎉 完成！所有分支保留，历史已清理"
echo ""
git branch -v
